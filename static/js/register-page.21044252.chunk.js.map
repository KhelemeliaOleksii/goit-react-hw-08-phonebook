{"version":3,"file":"static/js/register-page.21044252.chunk.js","mappings":"+SAUe,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAOMC,EAAa,WACfL,EAAQ,IACRE,EAAS,IACTE,EAAY,KAEVE,EAAkB,SAAC,GAAiC,IAAD,IAA9BC,OAAUR,EAAoB,EAApBA,KAAMS,EAAc,EAAdA,MACvC,OAAQT,GACJ,IAAK,OACD,OAAOC,EAAQQ,GACnB,IAAK,QAED,OAAON,EAASM,GACpB,IAAK,WACD,OAAOJ,EAAYI,GACvB,QACI,SAGNC,GAAcV,IAASE,IAAUE,EACjCO,GAAQC,EAAAA,EAAAA,KACd,OACI,SAACC,EAAA,EAAD,CAAeF,MAAOA,EAAtB,UACI,UAACG,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACI,SAACC,EAAA,GAAD,KACA,SAACC,EAAA,EAAD,CACIC,GAAI,CACAC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALpB,UAQI,UAACL,EAAA,EAAD,CAAKH,UAAU,OAAOS,SArCd,SAACC,GACrBA,EAAMC,iBACN7B,EAAS8B,EAAAA,EAAAA,SAAwB,CAAE3B,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDE,KAkC6DsB,YAAU,EAACT,GAAI,CAAEU,GAAI,GAAtE,WACI,SAACC,EAAA,EAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNnC,KAAK,OACLoC,aAAa,MACbC,WAAS,EACTC,SAAU/B,EACVgC,MAAM,yIACNC,WAAY,CACRC,QAAS,6HAIjB,SAACX,EAAA,EAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNnC,KAAK,QACLoC,aAAa,MACbE,SAAU/B,KAEd,SAACuB,EAAA,EAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTjC,KAAK,WACLmC,MAAM,WACNO,KAAK,WACLR,GAAG,WACHE,aAAa,MACbE,SAAU/B,KAEd,SAACoC,EAAA,EAAD,CACID,KAAK,SACLT,WAAS,EACTW,QAAQ,YACRzB,GAAI,CAAEU,GAAI,EAAGgB,GAAI,GACjBC,SAAUpC,EALd","sources":["Views/RegisterView/RegisterView.js"],"sourcesContent":["import { createTheme, ThemeProvider } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Button from \"@mui/material/Button\";\nimport { useState } from \"react\";\nimport { useDispatch } from 'react-redux'\nimport authOperations from \"../../redux/auth/auth-operations\";\n\nexport default function RegisterView() {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handlerOnSubmit = (event) => {\n        event.preventDefault();\n        dispatch(authOperations.register({ name, email, password }));\n        resetState();\n    }\n    const resetState = () => {\n        setName('');\n        setEmail('');\n        setPassword('');\n    }\n    const handlerOnChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                return setName(value);\n            case 'email':\n\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            default:\n                return;\n        }\n    }\n    const isDisabled = !name || !email || !password;\n    const theme = createTheme();\n    return (\n        <ThemeProvider theme={theme}>\n            <Container component='main' maxWidth='lg'>\n                <CssBaseline />\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Box component=\"form\" onSubmit={handlerOnSubmit} noValidate sx={{ mt: 1 }}>\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"Name\"\n                            name=\"name\"\n                            autoComplete=\"off\"\n                            autoFocus\n                            onChange={handlerOnChange}\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            inputProps={{\n                                pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n                            }}\n\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"off\"\n                            onChange={handlerOnChange}\n                        />\n                        <TextField\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"off\"\n                            onChange={handlerOnChange}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            sx={{ mt: 3, mb: 2 }}\n                            disabled={isDisabled}\n                        >\n                            Register\n                        </Button>\n                    </Box>\n                </Box>\n            </Container>\n        </ThemeProvider>\n    )\n}"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","resetState","handlerOnChange","target","value","isDisabled","theme","createTheme","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","onSubmit","event","preventDefault","authOperations","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","title","inputProps","pattern","type","Button","variant","mb","disabled"],"sourceRoot":""}